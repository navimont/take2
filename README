A linked address database
=========================

see: http://www.weschnitz.com

*** Find your way through the source files

The database structure is defined in take2dbm.py
Start looking into take2search.py which implements the central search functionality.
Another central source file is take2edit.py where new data is added to the address book
or updated or deleted.



*** Implemented features

- login with OpenId
- multi-user enabled
- multiple addresses, emails etc. per contact
- as a logged in user you can make public your own address but not the other
  entries in your address book
- Lookup coordinates and show address on a map display

*** Future Features

(+++) difficult
(++)  doable

*       change DB layout for expandable
* (+)   welcome page with a large map and all your contacts displayed
* (++)  special layout for smartphones
* (+++) advanced sharing: Invite other users to see your address
* (++)  adress list PDF export
* (++)  Import address data from Excel (csv)
* (+++) internationalization http://blog.yjl.im/2009/02/using-django-i18n-in-google-app-engine.html
* (+)   User Avatars to depict users
* (+)   show a sites icon together with the web link
*       open gmail when an email address is clicked
* (++)  take photos with webcam and include the pictures with a contact
* (+)   vcard import (or ideally, by forwarding vcard emails to weschnitz)
* (++)  ldap interface for mail addresses
* (+)   Unsubscribe
* (++)  Export data for christmas card lists or other meetups
*       Complete delete as a second stage after attic

*** Development process

* Upload
./appcfg.py --no_cookies -e stefan@weschnitz.com update ../take2

* manage application:
https://appengine.google.com/

* appengine link
http://take2nitz.appspot.com/

- In the javascript source openid-jquery.js the image path needs to be adapted:
	img_path : '/static/openid/images/',


*** Resources

# On how to fetch data from remote server
# and how to serve images from the datastore!
http://code.google.com/appengine/articles/python/serving_dynamic_images.html

# Mastering the datastore series of articles
http://code.google.com/appengine/articles/datastore/overview.html

# OpenLayers tips
http://www.peterrobins.co.uk

# Ajax upload demo
http://valums.com/files/2009/ajax-upload/demo-jquery.htm

# jQuery tutorial
http://docs.jquery.com/Tutorials:Getting_Started_with_jQuery

# Ãœber Geo-queries
# Creating a store locator application
http://code.google.com/apis/maps/articles/phpsqlsearch_v3.html
# pypi geomodel implementation with a GeoModel class
http://pypi.python.org/pypi/geomodel

# To clear the local datastore for an application, use the --clear_datastore option when you start the web server:
dev_appserver.py --clear_datastore ~/epoi

# HTML5
http://diveintohtml5.org

# Layout
http://www.colorschemer.com/online.html

# OpenId login
http://plugins.jquery.com/project/OpenId

# Google Maps Javascript API
http://code.google.com/apis/maps/documentation/javascript/

# Git
http://book.git-scm.com/index.html


